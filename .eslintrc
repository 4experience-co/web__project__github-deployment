{
  "env": {
    "browser": true,
    "es2021": true
  },
  "extends": ["plugin:react/recommended", "airbnb"],
  "parser": "@typescript-eslint/parser",
  "parserOptions": {
    "ecmaFeatures": {
      "jsx": true
    },
    "ecmaVersion": "latest",
    "sourceType": "module"
  },
  "plugins": ["react", "@typescript-eslint", "import-quotes", "react-hooks", "simple-import-sort", "prettier"],
  "settings": {
    "import/resolver": {
      "typescript": {}
    },
    "editor.codeActionsOnSave": {
      "source.fixAll.eslint": true
    }
  },

  "rules": {
    "no-restricted-exports": "off",
    "prettier/prettier": "error",
    "react/jsx-one-expression-per-line": "off",
    "no-undef": "off",
    "react/jsx-filename-extension": ["warn", { "extensions": [".tsx"] }],
    "max-len": ["warn", { "code": 180 }],
    "quotes": ["error", "double", { "avoidEscape": true }],
    "import-quotes/import-quotes": [1, "double"],
    "semi": "error",
    "react/react-in-jsx-scope": "off",
    "react-hooks/rules-of-hooks": "error",
    "react-hooks/exhaustive-deps": "warn",
    "comma-dangle": [
      "error",
      {
        "functions": "never"
      }
    ],

    "no-use-before-define": "off",

    "react/function-component-definition": [2, { "namedComponents": "arrow-function" }],
    "import/extensions": [
      "error",
      "ignorePackages",
      {
        "ts": "never",
        "tsx": "never"
      }
    ]
  },
  "overrides": [
    // override "simple-import-sort" config
    {
      "files": ["*.js", "*.jsx", "*.ts", "*.tsx"],
      "rules": {
        "simple-import-sort/imports": [
          "error",
          {
            "groups": [
              // Packages `react` related packages come first.
              ["^react", "^@?\\w"],
              // Internal packages.
              ["^(@|components)(/.*|$)"],
              // Side effect imports.
              ["^\\u0000"],
              // Parent imports. Put `..` last.
              ["^\\.\\.(?!/?$)", "^\\.\\./?$"],
              // Other relative imports. Put same-folder imports and `.` last.
              ["^\\./(?=.*/)(?!/?$)", "^\\.(?!/?$)", "^\\./?$"],
              // Style imports.
              ["^.+\\.?(css)$"]
            ]
          }
        ]
      }
    }
  ]
}
